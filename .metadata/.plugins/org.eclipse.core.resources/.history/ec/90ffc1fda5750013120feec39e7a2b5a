package com.hypercode.the_voice_of_people;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import com.example.maps.R;
import com.google.android.gms.internal.r;
import com.hypercode.the_voice_of_people.Signup.HttpAsyncTask;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class Login extends Activity {

	Button login,signup;
	EditText email,password;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login_window);
		
		login=(Button) findViewById(R.id.login_button);
		signup=(Button) findViewById(R.id.signup_button);
		email = (EditText) findViewById(R.id.email);
		password = (EditText) findViewById(R.id.password);
		
		if(isConnected()){ 
            System.out.println("You are conncted");
        }
        else{
        	System.out.println("You are NOT conncted");
        }
		
		login.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
			}
		});
        signup.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent signup=new Intent("com.hypercode.the_voice_of_people.SIGNUP");
				startActivity(signup);
			}
		});
	} 
        public static String POST(String url, LoginAccount account){
            InputStream inputStream = null;
            String result = "";
            try {
     
                // 1. create HttpClient
                HttpClient httpclient = new DefaultHttpClient();
     
                // 2. make POST request to the given URL
                HttpPost httpPost = new HttpPost(url);
                
                
                ArrayList<NameValuePair> postParameters;
                postParameters = new ArrayList<NameValuePair>();
                postParameters.add(new BasicNameValuePair("email",account.getEmail()));
                postParameters.add(new BasicNameValuePair("password", account.getPassword()));
                
                httpPost.setEntity(new UrlEncodedFormEntity(postParameters));
     
                HttpResponse httpResponse = httpclient.execute(httpPost);
     
            } catch (Exception e) {
                Log.d("InputStream", e.getLocalizedMessage());
            }
     
            // 11. return result
            return result;	
        }
        private class HttpAsyncTask extends AsyncTask<String, Void, String> {
            @Override
            protected String doInBackground(String... urls) {
     
                SignupAccount account= new SignupAccount();
                account.setUserName(username.getText().toString());
                account.setEmail(email.getText().toString());
                account.setPassword(password.getText().toString());
     
                return POST(urls[0],account);
            }
            // onPostExecute displays the results of the AsyncTask.
            @Override
            protected void onPostExecute(String result) {
                Toast.makeText(getBaseContext(), "Data Sent!", Toast.LENGTH_LONG).show();
           }
        }
    	 private static String convertInputStreamToString(InputStream inputStream) throws IOException{
    	        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
    	        String line = "";
    	        String result = "";
    	        while((line = bufferedReader.readLine()) != null)
    	            result += line;
    	 
    	        inputStream.close();
    	        return result;
    	   
    	 }   
    	
    	
    	public void send(View v) {
    		
    		boolean all_fields_are_ok = true;
    		CharSequence emailV= (CharSequence) email.getText().toString();
    		String usernameV=username.getText().toString();
    		String passwordV=password.getText().toString();
    		String confirm_passwordV=confirm_password.getText().toString();
    		
    		
    		if(emailV == null || usernameV.equals("") || passwordV.equals("") || confirm_passwordV.equals("") ||  !isValidEmail(emailV) || !passwordV.equals(confirm_passwordV) )
    			all_fields_are_ok = false;
    		
    		String origresponseText="";
            String e_mail = email.getText().toString();    
            if (all_fields_are_ok ) {
            	new HttpAsyncTask().execute("http://10.0.2.2:8081/3w/mRegister");
            }
            else {
            	Toast.makeText(getBaseContext(),"All fields are required",Toast.LENGTH_SHORT).show();
            }
            
        }
	
 
}
